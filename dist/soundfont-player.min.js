(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";var base64DecodeToArray=require("./lib/b64decode.js");var parseNote=require("note-parser");function Soundfont(audioContext,soundfontsUrlRoot,preferredExtension){if(!(this instanceof Soundfont))return new Soundfont(audioContext);this.ctx=audioContext;this.instruments={};this.promises=[];this.soundfontsUrlRoot=soundfontsUrlRoot;this.preferredExtension=preferredExtension}Soundfont.prototype.instrument=function(name){if(!name)return createDefaultInstrument(this.ctx,"default");var inst=this.instruments[name];if(!inst){var ctx=this.ctx;inst=createDefaultInstrument(ctx,name);var promise=Soundfont.loadBuffers(ctx,name,this).then(function(buffers){var realInst=createInstrument(ctx,name,buffers);inst.play=realInst.play});this.promises.push(promise);inst.onready=function(callback){return promise.then(callback)};this.instruments[name]=inst}return inst};Soundfont.prototype.onready=function(callback){Promise.all(this.promises).then(callback)};Soundfont.noteToMidi=function(note){return parseNote(note).midi};Soundfont.nameToUrl=function(name){var urlRoot=this.soundfontsUrlRoot||"https://cdn.rawgit.com/gleitz/midi-js-Soundfonts/master/FluidR3_GM/";var extension=this.preferredExtension&&this.preferredExtension==="mp3"?"mp3":"ogg";return urlRoot+name+"-"+extension+".js"};Soundfont.loadData=function(url){return new Promise(function(done,reject){var req=new XMLHttpRequest;req.open("GET",url);req.onload=function(){if(req.status==200){done(req.response)}else{reject(Error(req.statusText))}};req.onerror=function(){reject(Error("Network Error"))};req.send()})};Soundfont.dataToJson=function(data){var begin=data.indexOf("MIDI.Soundfont.");begin=data.indexOf("=",begin)+2;var end=data.lastIndexOf(",");return JSON.parse(data.slice(begin,end)+"}")};Soundfont.loadBuffers=function(ctx,name,soundfont){var nameToUrl=Soundfont.nameToUrl;if(soundfont instanceof Soundfont)nameToUrl=nameToUrl.bind(soundfont);return Promise.resolve(name).then(nameToUrl).then(Soundfont.loadData).then(Soundfont.dataToJson).then(function(jsonData){return createBank(ctx,name,jsonData)}).then(decodeBank).then(function(bank){return bank.buffers})};function createBank(ctx,name,data){var bank={ctx:ctx,name:name,data:data};bank.buffers={};return bank}function decodeBank(bank){var promises=Object.keys(bank.data).map(function(note){return decodeNote(bank.ctx,bank.data[note]).then(function(buffer){note=parseNote(note);bank.buffers[note.midi]=buffer})});return Promise.all(promises).then(function(){return bank})}function decodeNote(context,data){return new Promise(function(done,reject){var decodedData=base64DecodeToArray(data.split(",")[1]).buffer;context.decodeAudioData(decodedData,function(buffer){done(buffer)},function(e){reject("DecodeAudioData error",e)})})}function createDefaultInstrument(context,name){var instrument={name:name,play:function(note,time,duration,options){note=parseNote(note);duration=duration||.2;options=options||{};var vcoType=options.vcoType||"sine";var vco=context.createOscillator();vco.type=vcoType;vco.frequency.value=note.freq;var vca=context.createGain();vca.gain.value=options.gain||.5;vco.connect(vca);vca.connect(context.destination);vco.start(time);if(duration>0)vco.stop(time+duration);return vco}};return instrument}function createInstrument(audioContext,name,buffers){var instrument={name:name,play:function(note,time,duration){note=parseNote(note);var buffer=buffers[note.midi];if(!buffer){console.log("WARNING: Note buffer not found",name,note);return}var source=audioContext.createBufferSource();source.buffer=buffer;source.connect(audioContext.destination);source.start(time);if(duration>0)source.stop(time+duration);return source}};return instrument}if(typeof define==="function"&&define.amd)define(function(){return Soundfont});if(typeof module==="object"&&module.exports)module.exports=Soundfont;if(typeof window!=="undefined")window.Soundfont=Soundfont},{"./lib/b64decode.js":2,"note-parser":3}],2:[function(require,module,exports){"use strict";function b64ToUint6(nChr){return nChr>64&&nChr<91?nChr-65:nChr>96&&nChr<123?nChr-71:nChr>47&&nChr<58?nChr+4:nChr===43?62:nChr===47?63:0}function base64DecodeToArray(sBase64,nBlocksSize){var sB64Enc=sBase64.replace(/[^A-Za-z0-9\+\/]/g,"");var nInLen=sB64Enc.length;var nOutLen=nBlocksSize?Math.ceil((nInLen*3+1>>2)/nBlocksSize)*nBlocksSize:nInLen*3+1>>2;var taBytes=new Uint8Array(nOutLen);for(var nMod3,nMod4,nUint24=0,nOutIdx=0,nInIdx=0;nInIdx<nInLen;nInIdx++){nMod4=nInIdx&3;nUint24|=b64ToUint6(sB64Enc.charCodeAt(nInIdx))<<18-6*nMod4;if(nMod4===3||nInLen-nInIdx===1){for(nMod3=0;nMod3<3&&nOutIdx<nOutLen;nMod3++,nOutIdx++){taBytes[nOutIdx]=nUint24>>>(16>>>nMod3&24)&255}nUint24=0}}return taBytes}module.exports=base64DecodeToArray},{}],3:[function(require,module,exports){"use strict";var NOTE=/^([a-gA-G])(#{0,2}|b{0,2})(-?\d{0,1})$/;var parse=function(note,defaultOctave,defaultValue){var parsed,match;if(typeof note==="string"&&(match=NOTE.exec(note))){var octave=match[3]!==""?+match[3]:defaultOctave||4;parsed={pc:match[1].toLowerCase(),acc:match[2],oct:octave}}else if(typeof note.pc!=="undefined"&&typeof note.acc!=="undefined"&&typeof note.oct!=="undefined"){parsed=note}if(parsed){parsed.midi=parsed.midi||toMidi(parsed);parsed.freq=parsed.freq||midiToFrequency(parsed.midi);return parsed}else if(typeof defaultValue!=="undefined"){return defaultValue}else{throw Error("Invalid note format: "+note)}};parse.toString=function(obj){return obj.pc+obj.acc+obj.oct};var SEMITONES={c:0,d:2,e:4,f:5,g:7,a:9,b:11};function toMidi(note){var alter=note.acc.length;if(note.acc[0]==="b")alter=-1*alter;return SEMITONES[note.pc]+alter+12*(note.oct+1)}function midiToFrequency(note){return Math.pow(2,(note-69)/12)*440}module.exports=parse},{}]},{},[1]);